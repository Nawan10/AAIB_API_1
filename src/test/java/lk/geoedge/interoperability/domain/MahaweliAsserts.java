package lk.geoedge.interoperability.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class MahaweliAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMahaweliAllPropertiesEquals(Mahaweli expected, Mahaweli actual) {
        assertMahaweliAutoGeneratedPropertiesEquals(expected, actual);
        assertMahaweliAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMahaweliAllUpdatablePropertiesEquals(Mahaweli expected, Mahaweli actual) {
        assertMahaweliUpdatableFieldsEquals(expected, actual);
        assertMahaweliUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMahaweliAutoGeneratedPropertiesEquals(Mahaweli expected, Mahaweli actual) {
        assertThat(actual)
            .as("Verify Mahaweli auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMahaweliUpdatableFieldsEquals(Mahaweli expected, Mahaweli actual) {
        assertThat(actual)
            .as("Verify Mahaweli relevant properties")
            .satisfies(a -> assertThat(a.getMahaweli()).as("check mahaweli").isEqualTo(expected.getMahaweli()))
            .satisfies(a -> assertThat(a.getCode()).as("check code").isEqualTo(expected.getCode()))
            .satisfies(a -> assertThat(a.getAddedBy()).as("check addedBy").isEqualTo(expected.getAddedBy()))
            .satisfies(a -> assertThat(a.getAddedDate()).as("check addedDate").isEqualTo(expected.getAddedDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMahaweliUpdatableRelationshipsEquals(Mahaweli expected, Mahaweli actual) {
        // empty method
    }
}
