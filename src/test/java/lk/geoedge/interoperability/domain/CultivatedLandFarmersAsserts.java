package lk.geoedge.interoperability.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CultivatedLandFarmersAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCultivatedLandFarmersAllPropertiesEquals(CultivatedLandFarmers expected, CultivatedLandFarmers actual) {
        assertCultivatedLandFarmersAutoGeneratedPropertiesEquals(expected, actual);
        assertCultivatedLandFarmersAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCultivatedLandFarmersAllUpdatablePropertiesEquals(
        CultivatedLandFarmers expected,
        CultivatedLandFarmers actual
    ) {
        assertCultivatedLandFarmersUpdatableFieldsEquals(expected, actual);
        assertCultivatedLandFarmersUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCultivatedLandFarmersAutoGeneratedPropertiesEquals(
        CultivatedLandFarmers expected,
        CultivatedLandFarmers actual
    ) {
        assertThat(actual)
            .as("Verify CultivatedLandFarmers auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCultivatedLandFarmersUpdatableFieldsEquals(CultivatedLandFarmers expected, CultivatedLandFarmers actual) {
        assertThat(actual)
            .as("Verify CultivatedLandFarmers relevant properties")
            .satisfies(a -> assertThat(a.getRelationId()).as("check relationId").isEqualTo(expected.getRelationId()))
            .satisfies(a -> assertThat(a.getCreatedAt()).as("check createdAt").isEqualTo(expected.getCreatedAt()))
            .satisfies(a -> assertThat(a.getAddedBy()).as("check addedBy").isEqualTo(expected.getAddedBy()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCultivatedLandFarmersUpdatableRelationshipsEquals(
        CultivatedLandFarmers expected,
        CultivatedLandFarmers actual
    ) {
        assertThat(actual)
            .as("Verify CultivatedLandFarmers relationships")
            .satisfies(a -> assertThat(a.getFarmer()).as("check farmer").isEqualTo(expected.getFarmer()))
            .satisfies(a -> assertThat(a.getCultivatedLand()).as("check cultivatedLand").isEqualTo(expected.getCultivatedLand()));
    }
}
