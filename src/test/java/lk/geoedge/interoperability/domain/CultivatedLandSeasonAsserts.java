package lk.geoedge.interoperability.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CultivatedLandSeasonAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCultivatedLandSeasonAllPropertiesEquals(CultivatedLandSeason expected, CultivatedLandSeason actual) {
        assertCultivatedLandSeasonAutoGeneratedPropertiesEquals(expected, actual);
        assertCultivatedLandSeasonAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCultivatedLandSeasonAllUpdatablePropertiesEquals(CultivatedLandSeason expected, CultivatedLandSeason actual) {
        assertCultivatedLandSeasonUpdatableFieldsEquals(expected, actual);
        assertCultivatedLandSeasonUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCultivatedLandSeasonAutoGeneratedPropertiesEquals(CultivatedLandSeason expected, CultivatedLandSeason actual) {
        assertThat(actual)
            .as("Verify CultivatedLandSeason auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCultivatedLandSeasonUpdatableFieldsEquals(CultivatedLandSeason expected, CultivatedLandSeason actual) {
        assertThat(actual)
            .as("Verify CultivatedLandSeason relevant properties")
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getPeriod()).as("check period").isEqualTo(expected.getPeriod()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCultivatedLandSeasonUpdatableRelationshipsEquals(CultivatedLandSeason expected, CultivatedLandSeason actual) {
        // empty method
    }
}
