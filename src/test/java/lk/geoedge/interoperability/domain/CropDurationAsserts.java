package lk.geoedge.interoperability.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CropDurationAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCropDurationAllPropertiesEquals(CropDuration expected, CropDuration actual) {
        assertCropDurationAutoGeneratedPropertiesEquals(expected, actual);
        assertCropDurationAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCropDurationAllUpdatablePropertiesEquals(CropDuration expected, CropDuration actual) {
        assertCropDurationUpdatableFieldsEquals(expected, actual);
        assertCropDurationUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCropDurationAutoGeneratedPropertiesEquals(CropDuration expected, CropDuration actual) {
        assertThat(actual)
            .as("Verify CropDuration auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCropDurationUpdatableFieldsEquals(CropDuration expected, CropDuration actual) {
        assertThat(actual)
            .as("Verify CropDuration relevant properties")
            .satisfies(a -> assertThat(a.getDuration()).as("check duration").isEqualTo(expected.getDuration()))
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getStages()).as("check stages").isEqualTo(expected.getStages()))
            .satisfies(a -> assertThat(a.getAddedBy()).as("check addedBy").isEqualTo(expected.getAddedBy()))
            .satisfies(a -> assertThat(a.getAddedDate()).as("check addedDate").isEqualTo(expected.getAddedDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCropDurationUpdatableRelationshipsEquals(CropDuration expected, CropDuration actual) {
        assertThat(actual)
            .as("Verify CropDuration relationships")
            .satisfies(a -> assertThat(a.getCrop()).as("check crop").isEqualTo(expected.getCrop()));
    }
}
