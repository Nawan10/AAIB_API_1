package lk.geoedge.interoperability.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CropDamageAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCropDamageAllPropertiesEquals(CropDamage expected, CropDamage actual) {
        assertCropDamageAutoGeneratedPropertiesEquals(expected, actual);
        assertCropDamageAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCropDamageAllUpdatablePropertiesEquals(CropDamage expected, CropDamage actual) {
        assertCropDamageUpdatableFieldsEquals(expected, actual);
        assertCropDamageUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCropDamageAutoGeneratedPropertiesEquals(CropDamage expected, CropDamage actual) {
        assertThat(actual)
            .as("Verify CropDamage auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCropDamageUpdatableFieldsEquals(CropDamage expected, CropDamage actual) {
        assertThat(actual)
            .as("Verify CropDamage relevant properties")
            .satisfies(a -> assertThat(a.getAddedBy()).as("check addedBy").isEqualTo(expected.getAddedBy()))
            .satisfies(a -> assertThat(a.getCreatedAt()).as("check createdAt").isEqualTo(expected.getCreatedAt()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCropDamageUpdatableRelationshipsEquals(CropDamage expected, CropDamage actual) {
        assertThat(actual)
            .as("Verify CropDamage relationships")
            .satisfies(a -> assertThat(a.getCrop()).as("check crop").isEqualTo(expected.getCrop()))
            .satisfies(a -> assertThat(a.getDamage()).as("check damage").isEqualTo(expected.getDamage()));
    }
}
