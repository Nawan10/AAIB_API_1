package lk.geoedge.interoperability.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class IndexCoveragesAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIndexCoveragesAllPropertiesEquals(IndexCoverages expected, IndexCoverages actual) {
        assertIndexCoveragesAutoGeneratedPropertiesEquals(expected, actual);
        assertIndexCoveragesAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIndexCoveragesAllUpdatablePropertiesEquals(IndexCoverages expected, IndexCoverages actual) {
        assertIndexCoveragesUpdatableFieldsEquals(expected, actual);
        assertIndexCoveragesUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIndexCoveragesAutoGeneratedPropertiesEquals(IndexCoverages expected, IndexCoverages actual) {
        assertThat(actual)
            .as("Verify IndexCoverages auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIndexCoveragesUpdatableFieldsEquals(IndexCoverages expected, IndexCoverages actual) {
        assertThat(actual)
            .as("Verify IndexCoverages relevant properties")
            .satisfies(a -> assertThat(a.getIndexProductId()).as("check indexProductId").isEqualTo(expected.getIndexProductId()))
            .satisfies(a -> assertThat(a.getPremiumRate()).as("check premiumRate").isEqualTo(expected.getPremiumRate()))
            .satisfies(a -> assertThat(a.getIsFree()).as("check isFree").isEqualTo(expected.getIsFree()))
            .satisfies(a -> assertThat(a.getIsPaid()).as("check isPaid").isEqualTo(expected.getIsPaid()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIndexCoveragesUpdatableRelationshipsEquals(IndexCoverages expected, IndexCoverages actual) {
        assertThat(actual)
            .as("Verify IndexCoverages relationships")
            .satisfies(a -> assertThat(a.getDamageReason()).as("check damageReason").isEqualTo(expected.getDamageReason()));
    }
}
