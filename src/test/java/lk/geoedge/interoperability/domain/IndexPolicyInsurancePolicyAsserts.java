package lk.geoedge.interoperability.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class IndexPolicyInsurancePolicyAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIndexPolicyInsurancePolicyAllPropertiesEquals(
        IndexPolicyInsurancePolicy expected,
        IndexPolicyInsurancePolicy actual
    ) {
        assertIndexPolicyInsurancePolicyAutoGeneratedPropertiesEquals(expected, actual);
        assertIndexPolicyInsurancePolicyAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIndexPolicyInsurancePolicyAllUpdatablePropertiesEquals(
        IndexPolicyInsurancePolicy expected,
        IndexPolicyInsurancePolicy actual
    ) {
        assertIndexPolicyInsurancePolicyUpdatableFieldsEquals(expected, actual);
        assertIndexPolicyInsurancePolicyUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIndexPolicyInsurancePolicyAutoGeneratedPropertiesEquals(
        IndexPolicyInsurancePolicy expected,
        IndexPolicyInsurancePolicy actual
    ) {
        assertThat(actual)
            .as("Verify IndexPolicyInsurancePolicy auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIndexPolicyInsurancePolicyUpdatableFieldsEquals(
        IndexPolicyInsurancePolicy expected,
        IndexPolicyInsurancePolicy actual
    ) {
        assertThat(actual)
            .as("Verify IndexPolicyInsurancePolicy relevant properties")
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getPolicyNo()).as("check policyNo").isEqualTo(expected.getPolicyNo()))
            .satisfies(a -> assertThat(a.getIsActivate()).as("check isActivate").isEqualTo(expected.getIsActivate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIndexPolicyInsurancePolicyUpdatableRelationshipsEquals(
        IndexPolicyInsurancePolicy expected,
        IndexPolicyInsurancePolicy actual
    ) {
        // empty method
    }
}
