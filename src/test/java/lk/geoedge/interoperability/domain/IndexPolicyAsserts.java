package lk.geoedge.interoperability.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class IndexPolicyAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIndexPolicyAllPropertiesEquals(IndexPolicy expected, IndexPolicy actual) {
        assertIndexPolicyAutoGeneratedPropertiesEquals(expected, actual);
        assertIndexPolicyAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIndexPolicyAllUpdatablePropertiesEquals(IndexPolicy expected, IndexPolicy actual) {
        assertIndexPolicyUpdatableFieldsEquals(expected, actual);
        assertIndexPolicyUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIndexPolicyAutoGeneratedPropertiesEquals(IndexPolicy expected, IndexPolicy actual) {
        assertThat(actual)
            .as("Verify IndexPolicy auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIndexPolicyUpdatableFieldsEquals(IndexPolicy expected, IndexPolicy actual) {
        assertThat(actual)
            .as("Verify IndexPolicy relevant properties")
            .satisfies(a -> assertThat(a.getStartDate()).as("check startDate").isEqualTo(expected.getStartDate()))
            .satisfies(a -> assertThat(a.getEndDate()).as("check endDate").isEqualTo(expected.getEndDate()))
            .satisfies(a -> assertThat(a.getStageNo()).as("check stageNo").isEqualTo(expected.getStageNo()))
            .satisfies(a -> assertThat(a.getIndexStatus()).as("check indexStatus").isEqualTo(expected.getIndexStatus()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIndexPolicyUpdatableRelationshipsEquals(IndexPolicy expected, IndexPolicy actual) {
        assertThat(actual)
            .as("Verify IndexPolicy relationships")
            .satisfies(a -> assertThat(a.getPolicy()).as("check policy").isEqualTo(expected.getPolicy()))
            .satisfies(a -> assertThat(a.getSeason()).as("check season").isEqualTo(expected.getSeason()))
            .satisfies(a -> assertThat(a.getCropVariety()).as("check cropVariety").isEqualTo(expected.getCropVariety()))
            .satisfies(a -> assertThat(a.getCrop()).as("check crop").isEqualTo(expected.getCrop()))
            .satisfies(a -> assertThat(a.getWeatherStation()).as("check weatherStation").isEqualTo(expected.getWeatherStation()));
    }
}
