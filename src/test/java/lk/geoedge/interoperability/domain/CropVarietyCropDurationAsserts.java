package lk.geoedge.interoperability.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CropVarietyCropDurationAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCropVarietyCropDurationAllPropertiesEquals(CropVarietyCropDuration expected, CropVarietyCropDuration actual) {
        assertCropVarietyCropDurationAutoGeneratedPropertiesEquals(expected, actual);
        assertCropVarietyCropDurationAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCropVarietyCropDurationAllUpdatablePropertiesEquals(
        CropVarietyCropDuration expected,
        CropVarietyCropDuration actual
    ) {
        assertCropVarietyCropDurationUpdatableFieldsEquals(expected, actual);
        assertCropVarietyCropDurationUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCropVarietyCropDurationAutoGeneratedPropertiesEquals(
        CropVarietyCropDuration expected,
        CropVarietyCropDuration actual
    ) {
        assertThat(actual)
            .as("Verify CropVarietyCropDuration auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCropVarietyCropDurationUpdatableFieldsEquals(
        CropVarietyCropDuration expected,
        CropVarietyCropDuration actual
    ) {
        assertThat(actual)
            .as("Verify CropVarietyCropDuration relevant properties")
            .satisfies(a -> assertThat(a.getDuration()).as("check duration").isEqualTo(expected.getDuration()))
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getStages()).as("check stages").isEqualTo(expected.getStages()))
            .satisfies(a -> assertThat(a.getAddedBy()).as("check addedBy").isEqualTo(expected.getAddedBy()))
            .satisfies(a -> assertThat(a.getAddedDate()).as("check addedDate").isEqualTo(expected.getAddedDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCropVarietyCropDurationUpdatableRelationshipsEquals(
        CropVarietyCropDuration expected,
        CropVarietyCropDuration actual
    ) {
        // empty method
    }
}
