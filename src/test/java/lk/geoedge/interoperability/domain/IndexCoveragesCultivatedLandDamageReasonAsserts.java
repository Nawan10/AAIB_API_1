package lk.geoedge.interoperability.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class IndexCoveragesCultivatedLandDamageReasonAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIndexCoveragesCultivatedLandDamageReasonAllPropertiesEquals(
        IndexCoveragesCultivatedLandDamageReason expected,
        IndexCoveragesCultivatedLandDamageReason actual
    ) {
        assertIndexCoveragesCultivatedLandDamageReasonAutoGeneratedPropertiesEquals(expected, actual);
        assertIndexCoveragesCultivatedLandDamageReasonAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIndexCoveragesCultivatedLandDamageReasonAllUpdatablePropertiesEquals(
        IndexCoveragesCultivatedLandDamageReason expected,
        IndexCoveragesCultivatedLandDamageReason actual
    ) {
        assertIndexCoveragesCultivatedLandDamageReasonUpdatableFieldsEquals(expected, actual);
        assertIndexCoveragesCultivatedLandDamageReasonUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIndexCoveragesCultivatedLandDamageReasonAutoGeneratedPropertiesEquals(
        IndexCoveragesCultivatedLandDamageReason expected,
        IndexCoveragesCultivatedLandDamageReason actual
    ) {
        assertThat(actual)
            .as("Verify IndexCoveragesCultivatedLandDamageReason auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIndexCoveragesCultivatedLandDamageReasonUpdatableFieldsEquals(
        IndexCoveragesCultivatedLandDamageReason expected,
        IndexCoveragesCultivatedLandDamageReason actual
    ) {
        assertThat(actual)
            .as("Verify IndexCoveragesCultivatedLandDamageReason relevant properties")
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIndexCoveragesCultivatedLandDamageReasonUpdatableRelationshipsEquals(
        IndexCoveragesCultivatedLandDamageReason expected,
        IndexCoveragesCultivatedLandDamageReason actual
    ) {
        // empty method
    }
}
