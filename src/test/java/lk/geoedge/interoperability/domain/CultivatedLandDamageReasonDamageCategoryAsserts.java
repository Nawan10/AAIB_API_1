package lk.geoedge.interoperability.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CultivatedLandDamageReasonDamageCategoryAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCultivatedLandDamageReasonDamageCategoryAllPropertiesEquals(
        CultivatedLandDamageReasonDamageCategory expected,
        CultivatedLandDamageReasonDamageCategory actual
    ) {
        assertCultivatedLandDamageReasonDamageCategoryAutoGeneratedPropertiesEquals(expected, actual);
        assertCultivatedLandDamageReasonDamageCategoryAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCultivatedLandDamageReasonDamageCategoryAllUpdatablePropertiesEquals(
        CultivatedLandDamageReasonDamageCategory expected,
        CultivatedLandDamageReasonDamageCategory actual
    ) {
        assertCultivatedLandDamageReasonDamageCategoryUpdatableFieldsEquals(expected, actual);
        assertCultivatedLandDamageReasonDamageCategoryUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCultivatedLandDamageReasonDamageCategoryAutoGeneratedPropertiesEquals(
        CultivatedLandDamageReasonDamageCategory expected,
        CultivatedLandDamageReasonDamageCategory actual
    ) {
        assertThat(actual)
            .as("Verify CultivatedLandDamageReasonDamageCategory auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCultivatedLandDamageReasonDamageCategoryUpdatableFieldsEquals(
        CultivatedLandDamageReasonDamageCategory expected,
        CultivatedLandDamageReasonDamageCategory actual
    ) {
        assertThat(actual)
            .as("Verify CultivatedLandDamageReasonDamageCategory relevant properties")
            .satisfies(a -> assertThat(a.getCategoryName()).as("check categoryName").isEqualTo(expected.getCategoryName()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCultivatedLandDamageReasonDamageCategoryUpdatableRelationshipsEquals(
        CultivatedLandDamageReasonDamageCategory expected,
        CultivatedLandDamageReasonDamageCategory actual
    ) {
        // empty method
    }
}
