package lk.geoedge.interoperability.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class InsuranceCultivatedLandCultivatedLandAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInsuranceCultivatedLandCultivatedLandAllPropertiesEquals(
        InsuranceCultivatedLandCultivatedLand expected,
        InsuranceCultivatedLandCultivatedLand actual
    ) {
        assertInsuranceCultivatedLandCultivatedLandAutoGeneratedPropertiesEquals(expected, actual);
        assertInsuranceCultivatedLandCultivatedLandAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInsuranceCultivatedLandCultivatedLandAllUpdatablePropertiesEquals(
        InsuranceCultivatedLandCultivatedLand expected,
        InsuranceCultivatedLandCultivatedLand actual
    ) {
        assertInsuranceCultivatedLandCultivatedLandUpdatableFieldsEquals(expected, actual);
        assertInsuranceCultivatedLandCultivatedLandUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInsuranceCultivatedLandCultivatedLandAutoGeneratedPropertiesEquals(
        InsuranceCultivatedLandCultivatedLand expected,
        InsuranceCultivatedLandCultivatedLand actual
    ) {
        assertThat(actual)
            .as("Verify InsuranceCultivatedLandCultivatedLand auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInsuranceCultivatedLandCultivatedLandUpdatableFieldsEquals(
        InsuranceCultivatedLandCultivatedLand expected,
        InsuranceCultivatedLandCultivatedLand actual
    ) {
        assertThat(actual)
            .as("Verify InsuranceCultivatedLandCultivatedLand relevant properties")
            .satisfies(a -> assertThat(a.getLandStatus()).as("check landStatus").isEqualTo(expected.getLandStatus()))
            .satisfies(a -> assertThat(a.getUrea()).as("check urea").isEqualTo(expected.getUrea()))
            .satisfies(a -> assertThat(a.getMop()).as("check mop").isEqualTo(expected.getMop()))
            .satisfies(a -> assertThat(a.getTsp()).as("check tsp").isEqualTo(expected.getTsp()))
            .satisfies(a -> assertThat(a.getCreatedAt()).as("check createdAt").isEqualTo(expected.getCreatedAt()))
            .satisfies(a -> assertThat(a.getAddedBy()).as("check addedBy").isEqualTo(expected.getAddedBy()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInsuranceCultivatedLandCultivatedLandUpdatableRelationshipsEquals(
        InsuranceCultivatedLandCultivatedLand expected,
        InsuranceCultivatedLandCultivatedLand actual
    ) {
        // empty method
    }
}
