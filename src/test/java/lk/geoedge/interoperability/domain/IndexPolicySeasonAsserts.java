package lk.geoedge.interoperability.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class IndexPolicySeasonAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIndexPolicySeasonAllPropertiesEquals(IndexPolicySeason expected, IndexPolicySeason actual) {
        assertIndexPolicySeasonAutoGeneratedPropertiesEquals(expected, actual);
        assertIndexPolicySeasonAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIndexPolicySeasonAllUpdatablePropertiesEquals(IndexPolicySeason expected, IndexPolicySeason actual) {
        assertIndexPolicySeasonUpdatableFieldsEquals(expected, actual);
        assertIndexPolicySeasonUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIndexPolicySeasonAutoGeneratedPropertiesEquals(IndexPolicySeason expected, IndexPolicySeason actual) {
        assertThat(actual)
            .as("Verify IndexPolicySeason auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIndexPolicySeasonUpdatableFieldsEquals(IndexPolicySeason expected, IndexPolicySeason actual) {
        assertThat(actual)
            .as("Verify IndexPolicySeason relevant properties")
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getPeriod()).as("check period").isEqualTo(expected.getPeriod()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIndexPolicySeasonUpdatableRelationshipsEquals(IndexPolicySeason expected, IndexPolicySeason actual) {
        // empty method
    }
}
