package lk.geoedge.interoperability.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class InsurancePolicyDamageAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInsurancePolicyDamageAllPropertiesEquals(InsurancePolicyDamage expected, InsurancePolicyDamage actual) {
        assertInsurancePolicyDamageAutoGeneratedPropertiesEquals(expected, actual);
        assertInsurancePolicyDamageAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInsurancePolicyDamageAllUpdatablePropertiesEquals(
        InsurancePolicyDamage expected,
        InsurancePolicyDamage actual
    ) {
        assertInsurancePolicyDamageUpdatableFieldsEquals(expected, actual);
        assertInsurancePolicyDamageUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInsurancePolicyDamageAutoGeneratedPropertiesEquals(
        InsurancePolicyDamage expected,
        InsurancePolicyDamage actual
    ) {
        assertThat(actual)
            .as("Verify InsurancePolicyDamage auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInsurancePolicyDamageUpdatableFieldsEquals(InsurancePolicyDamage expected, InsurancePolicyDamage actual) {
        assertThat(actual)
            .as("Verify InsurancePolicyDamage relevant properties")
            .satisfies(a -> assertThat(a.getPercentage()).as("check percentage").isEqualTo(expected.getPercentage()))
            .satisfies(a -> assertThat(a.getIsFree()).as("check isFree").isEqualTo(expected.getIsFree()))
            .satisfies(a -> assertThat(a.getIsPaid()).as("check isPaid").isEqualTo(expected.getIsPaid()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInsurancePolicyDamageUpdatableRelationshipsEquals(
        InsurancePolicyDamage expected,
        InsurancePolicyDamage actual
    ) {
        assertThat(actual)
            .as("Verify InsurancePolicyDamage relationships")
            .satisfies(a -> assertThat(a.getInsurancePolicy()).as("check insurancePolicy").isEqualTo(expected.getInsurancePolicy()))
            .satisfies(a -> assertThat(a.getDamageReason()).as("check damageReason").isEqualTo(expected.getDamageReason()));
    }
}
