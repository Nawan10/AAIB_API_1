package lk.geoedge.interoperability.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class IndexPolicyWeatherStationAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIndexPolicyWeatherStationAllPropertiesEquals(
        IndexPolicyWeatherStation expected,
        IndexPolicyWeatherStation actual
    ) {
        assertIndexPolicyWeatherStationAutoGeneratedPropertiesEquals(expected, actual);
        assertIndexPolicyWeatherStationAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIndexPolicyWeatherStationAllUpdatablePropertiesEquals(
        IndexPolicyWeatherStation expected,
        IndexPolicyWeatherStation actual
    ) {
        assertIndexPolicyWeatherStationUpdatableFieldsEquals(expected, actual);
        assertIndexPolicyWeatherStationUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIndexPolicyWeatherStationAutoGeneratedPropertiesEquals(
        IndexPolicyWeatherStation expected,
        IndexPolicyWeatherStation actual
    ) {
        assertThat(actual)
            .as("Verify IndexPolicyWeatherStation auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIndexPolicyWeatherStationUpdatableFieldsEquals(
        IndexPolicyWeatherStation expected,
        IndexPolicyWeatherStation actual
    ) {
        assertThat(actual)
            .as("Verify IndexPolicyWeatherStation relevant properties")
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getCode()).as("check code").isEqualTo(expected.getCode()))
            .satisfies(a -> assertThat(a.getLatitude()).as("check latitude").isEqualTo(expected.getLatitude()))
            .satisfies(a -> assertThat(a.getLongitude()).as("check longitude").isEqualTo(expected.getLongitude()))
            .satisfies(a -> assertThat(a.getGnId()).as("check gnId").isEqualTo(expected.getGnId()))
            .satisfies(a -> assertThat(a.getDistrictId()).as("check districtId").isEqualTo(expected.getDistrictId()))
            .satisfies(a -> assertThat(a.getProvinceId()).as("check provinceId").isEqualTo(expected.getProvinceId()))
            .satisfies(a -> assertThat(a.getDsId()).as("check dsId").isEqualTo(expected.getDsId()))
            .satisfies(a -> assertThat(a.getAddedBy()).as("check addedBy").isEqualTo(expected.getAddedBy()))
            .satisfies(a -> assertThat(a.getCreatedAt()).as("check createdAt").isEqualTo(expected.getCreatedAt()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIndexPolicyWeatherStationUpdatableRelationshipsEquals(
        IndexPolicyWeatherStation expected,
        IndexPolicyWeatherStation actual
    ) {
        // empty method
    }
}
