package lk.geoedge.interoperability.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class IndexPolicyCropVarietyAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIndexPolicyCropVarietyAllPropertiesEquals(IndexPolicyCropVariety expected, IndexPolicyCropVariety actual) {
        assertIndexPolicyCropVarietyAutoGeneratedPropertiesEquals(expected, actual);
        assertIndexPolicyCropVarietyAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIndexPolicyCropVarietyAllUpdatablePropertiesEquals(
        IndexPolicyCropVariety expected,
        IndexPolicyCropVariety actual
    ) {
        assertIndexPolicyCropVarietyUpdatableFieldsEquals(expected, actual);
        assertIndexPolicyCropVarietyUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIndexPolicyCropVarietyAutoGeneratedPropertiesEquals(
        IndexPolicyCropVariety expected,
        IndexPolicyCropVariety actual
    ) {
        assertThat(actual)
            .as("Verify IndexPolicyCropVariety auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIndexPolicyCropVarietyUpdatableFieldsEquals(IndexPolicyCropVariety expected, IndexPolicyCropVariety actual) {
        assertThat(actual)
            .as("Verify IndexPolicyCropVariety relevant properties")
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getNoOfStages()).as("check noOfStages").isEqualTo(expected.getNoOfStages()))
            .satisfies(a -> assertThat(a.getImage()).as("check image").isEqualTo(expected.getImage()))
            .satisfies(a -> assertThat(a.getDescription()).as("check description").isEqualTo(expected.getDescription()))
            .satisfies(a -> assertThat(a.getAddedBy()).as("check addedBy").isEqualTo(expected.getAddedBy()))
            .satisfies(a -> assertThat(a.getCreatedAt()).as("check createdAt").isEqualTo(expected.getCreatedAt()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIndexPolicyCropVarietyUpdatableRelationshipsEquals(
        IndexPolicyCropVariety expected,
        IndexPolicyCropVariety actual
    ) {
        // empty method
    }
}
